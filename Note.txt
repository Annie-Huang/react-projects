Code 15 React Projects - Complete Course
(https://www.youtube.com/watch?v=a_7Z7C_JCyo&t=31s)

https://github.com/john-smilga/react-projects
https://react-projects.netlify.app/
https://www.johnsmilga.com
https://www.johnsmilga.com/projects

https://github.com/Annie-Huang/react-projects

https://react-icons.github.io/react-icons/
https://react-icons.github.io/react-icons/icons?name=di  << search for github, e.g. FaGithubSquare is a font awesome icons. Then you go to the Font Awesome link below to see how to import it.
https://react-icons.github.io/react-icons/icons?name=fa
https://github.com/noeldelgado/values.js

============================================================

Highline:
Project 2:
- Good async and await function for fetch in useEffect
- Nice one on {readMore ? info : `${info.substring(0, 200)}...`}
- Pass unrelated information as props to the same child
    <Tour key={tour.id} {...tour} removeTour={removeTour} />
    const Tour = ({id, image, info, price, name, removeTour}) => {..}
    export default Tour;
- Different between
    - onClick={() => fetchTours()}
    - onClick={fetchTours}
    - onClick={fetchTours()}

Project 3:
- Do a function call within setIndex so the index will update to the correct value within the current cycle.
    setIndex(() => {
      return index === people.length-1 ? 0 : index+1
    });
- Math.floor((Math.random() * people.length)) to get a random number

Project 4:
- If statement in react better to do it as {showInfo && <p>{info}</p>} rather than {showInfo ? <p>{info}</p> : null }

Project 5:
- [...new Set(items.map(item => item.category))]; to get the distinct values from an array of objects

Project 6:
- Can do evaluation on class like: className={`job-btn ${index === value && 'active-btn'}`}

Project 7:
- Smart way to to circular looping through an array through useEffect, button clicks, and set activeSlide|lastSlide|nextSlide
- Smart way of doing setInterval in useEffect
  useEffect(() => {
    let slider = setInterval(() => {
      setIndex(index + 1);
    }, 3000);
    return () => clearInterval(slider);
  }, [index])

Project 8:
- Simple form of a input field and a submit button

Project 9:
- Simple form of a input field and a submit button
- DOM method to manually copy text on element clicks
- Smart way of doing setTimeout in useEffect
  useEffect(() => {
    let timeout = setTimeout(() => {
      setAlert(false);
    }, 3000);
    return () => clearTimeout(timeout);
  }, [alert]);

Project 10:
- Basically a todo list app.
- Another way to do form submit: put onSubmit in form tag rather than onClick of the button tag
      <form className='grocery-form' onSubmit={handleSubmit}>
          <input type='text' />
          <button type='submit' className='submit-btn'>
            {isEditing ? 'edit' : 'submit'}
          </button>
      </form>

============================================================
C:\react\react-projects\1-birthday-reminder>npm install




onClick function
=======================
  if(tours.length === 0) {
    return <main>
        <button className='btn' onClick={() => fetchTours()}>Refresh</button>
        <button className='btn' onClick={fetchTours}>Refresh</button>			<<< This one is the same as the first one, you can use this short cut to do the first one if it doesn't need to pass in parameter
    </main>
  }

But this is different from
	<button className='btn' onClick={fetchTours()}>Refresh</button>		<< If you got this one, fetchTour will be auto trigger (without the click) as soon as tours.length === 0.


react-icons
==================
import { FaGithubSquare } from "react-icons/fa";
    <FaGithubSquare className='icon' />

.icon {
    font-size: 4rem;
    color: red;
}
















